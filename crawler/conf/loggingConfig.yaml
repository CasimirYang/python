version: 1
formatters:
  simple:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout
  ipFile:
    class: logging.FileHandler
    level: DEBUG
    formatter: simple
    filename: log/ipCrawler.log
  neoIpCrawler:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 100
    level: DEBUG
    formatter: simple
    filename: log/neoIpCrawler.log
  neo:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 100
    level: DEBUG
    formatter: simple
    filename: log/neo.log
  zhihuFile:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 100
    level: DEBUG
    formatter: simple
    filename: log/zhihuCrawler.log
    encoding : UTF-8
  apschedulerFile:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 10
    level: INFO
    formatter: simple
    filename: log/apschedulerFile.log
    encoding : UTF-8
  tornadoFile:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 100
    level: INFO
    formatter: simple
    filename: log/tornadoFile.log
  rootFile:
    class: logging.handlers.RotatingFileHandler
    maxBytes : 10485760
    backupCount : 100
    level: DEBUG
    formatter: simple
    filename: log/rootFile.log
loggers:
#  py2neo.cypher:
#    level: INFO
#    handlers: [neo]
  app.crawlerIP:
    level: INFO
    handlers: [ipFile]
    propagate: NO
  app.zhihu:
    level: INFO
    handlers: [zhihuFile]
    propagate: NO
#  apscheduler.scheduler:
#    level: INFO
#    handlers: [apschedulerFile]
#    propagate: YES
  tornado.access:
    level: INFO
    handlers: [console,tornadoFile]
    propagate: YES
root:
  level: INFO
  handlers: [rootFile]